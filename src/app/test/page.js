'use client';
import { useState } from "react";
import { Grid, TextField, Button, Box, Container } from "@mui/material";

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á datetime ‡πÄ‡∏õ‡πá‡∏ô ISO 8601 ("YYYY-MM-DDTHH:mm:ss.sssZ")
const formatToISOString = (datetime) => {
  if (!datetime) return "";
  return new Date(datetime).toISOString();
};

export default function CouponForm() {
  const maxClicks = 3; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏î‡πÑ‡∏î‡πâ
  const [clickCount, setClickCount] = useState(0);
  const [formData, setFormData] = useState({
    start_Date: "",
    end_Date: "",
  });

  const handleClick = () => {
    if (clickCount < maxClicks) {
      setClickCount(clickCount + 1);
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: formatToISOString(value),
    });
  };

  return (
    <Box
      sx={{
        minHeight: "100vh", // ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "#3E84C9", // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        padding: 3,
      }}
    >
      <Container maxWidth="md">
        <Box
          sx={{
            backgroundColor: "#ffffff",
            padding: 4,
            borderRadius: 2,
            boxShadow: 3,
          }}
        >
          <Grid container spacing={2}>
            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                type="datetime-local"
                label="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á (‡∏à‡∏≤‡∏Å)"
                name="start_Date"
                value={formData.start_Date ? formData.start_Date.slice(0, 16) : ""}
                onChange={handleChange}
                InputLabelProps={{ shrink: true }}
              />
            </Grid>

            <Grid item xs={12} sm={6}>
              <TextField
                fullWidth
                type="datetime-local"
                label="‡∏ñ‡∏∂‡∏á"
                name="end_Date"
                value={formData.end_Date ? formData.end_Date.slice(0, 16) : ""}
                onChange={handleChange}
                InputLabelProps={{ shrink: true }}
              />
            </Grid>

            <Grid item xs={12}>
              <p>üìÖ Start Date: {formData.start_Date || "-"}</p>
              <p>üìÖ End Date: {formData.end_Date || "-"}</p>
            </Grid>

            <Button
              variant="contained"
              color={clickCount >= maxClicks ? "inherit" : "primary"}
              onClick={handleClick}
              disabled={clickCount >= maxClicks}
            >
              {clickCount >= maxClicks ? "‡∏´‡∏°‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏î" : `‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å ${maxClicks - clickCount} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`}
            </Button>
          </Grid>
        </Box>
      </Container>
    </Box>
  );
}

